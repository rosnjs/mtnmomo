### Introduction

This package facilitates the integration of the [MTN MOMO API](https://momodeveloper.mtn.com) into your Laravel application. It offers a convenient wrapper around the core MTN MOMO API services, freeing you to focus on other aspects of your application.

### Installation

To begin, install the package via Composer:

```bash
composer require nzokolab/mtnmomo
```

**Custom Configuration**

If you wish to customize the default configurations, export the default configuration using:

```bash
php artisan vendor:publish --provider="Nzokolab\MtnMomo\MtnMomoServiceProvider" --tag="config"
```

**Database Migration**

The package service provider registers its own database migrations with the framework. Therefore, after installation, migrate your database:

```bash
php artisan migrate
```

### Prerequisites

Before integrating, ensure you have the following:

1. Create a [**developer account**](https://momodeveloper.mtn.com/signup) with MTN MOMO.
2. Subscribe to a [**product/service**](https://momodeveloper.mtn.com/products) you intend to consume.

If you've already subscribed to a product, find the subscription key in your [**profile**](https://momodeveloper.mtn.com/developer).

### Getting Started (Sandbox)

Register your client details:

```bash
php artisan mtn-momo:init
```

Next, register your client app ID:

```bash
php artisan mtn-momo:register-id
```

Optionally, you can verify your client ID:

```bash
php artisan mtn-momo:validate-id
```

Then, request a client secret (key):

```bash
php artisan mtn-momo:request-secret
```

### Usage

```php
use Nzokolab\MtnMomo\Products\Collection;

$collection = new Collection();

$referenceId = $collection->requestToPay('yourTransactionId', '46733123454', 100);
```

See [test numbers](https://momodeveloper.mtn.com/api-documentation/testing/#test-numbers)

**Exception Handling**

```php
use Nzokolab\MtnMomo\Products\Collection;
use Nzokolab\MtnMomo\Exceptions\CollectionRequestException;

try {
    $collection = new Collection();
    
    $referenceId = $collection->requestToPay('yourTransactionId', '46733123453', 100);
} catch(CollectionRequestException $e) {
    do {
        printf("\n\r%s:%d %s (%d) [%s]\n\r", 
            $e->getFile(), $e->getLine(), $e->getMessage(), $e->getCode(), get_class($e));
    } while($e = $e->getPrevious());
}
```

### [Available Methods](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products.html)

**Collection**

1. [Collect Money](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_requestToPay)

2. [Check Transaction Status](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_getTransactionStatus)

3. [Check Account Balance](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_getAccountBalance)

4. [Check Account Status](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_isActive)

5. [Get OAuth Token](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_getToken)

6. [Get Account Holder Info](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_getAccountHolderBasicInfo)

**Disbursement**

1. [Disburse Money](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Disbursement.html#method_transfer)

2. [Check Transaction Status](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Disbursement.html#method_getTransactionStatus)

3. [Check Account Balance](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Disbursement.html#method_getAccountBalance)

4. [Check Account Status](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Disbursement.html#method_isActive)

5. [Get OAuth Token](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Disbursement.html#method_getToken)

6. [Get Account Holder Info](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_getAccountHolderBasicInfo)

**Remittance**

1. [Remit Money](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/M

tnMomo/Products/Remittance.html#method_transact)

2. [Check Transaction Status](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Remittance.html#method_getTransactionStatus)

3. [Check Account Balance](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Remittance.html#method_getAccountBalance)

4. [Check Account Status](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Remittance.html#method_isActive)

5. [Get OAuth Token](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Remittance.html#method_getToken)

6. [Get Account Holder Info](https://mtvbrianking.github.io/laravel-mtn-momo/master/Nzokolab/MtnMomo/Products/Collection.html#method_getAccountHolderBasicInfo)

### Go Live

Make necessary changes to your setup before going live. [Read more](https://github.com/mtvbrianking/laravel-mtn-momo/wiki/Go-Live).

### Support Groups

Join MTN's Skype & WhatsApp support groups. [Here](https://momodeveloper.mtn.com/contact-support)

### Reporting Bugs

If you encounter a bug, provide as much information as possible:
- Steps to reproduce
- Expected result
- Actual result

This helps us fix the bug quickly. If you wish to fix it yourself, feel free to [fork the package](https://github.com/rosnjs/mtnmomo) and submit a pull request!